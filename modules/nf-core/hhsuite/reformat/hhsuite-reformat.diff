Changes in component 'nf-core/hhsuite/reformat'
Changes in 'hhsuite/reformat/meta.yml':
--- modules/nf-core/hhsuite/reformat/meta.yml
+++ modules/nf-core/hhsuite/reformat/meta.yml
@@ -1,3 +1,4 @@
+---
 # yaml-language-server: $schema=https://raw.githubusercontent.com/nf-core/modules/master/modules/meta-schema.json
 name: "hhsuite_reformat"
 description: Reformat a Multiple Sequence Alignment (MSA) file
@@ -5,7 +6,6 @@
   - reformat
   - MSA
   - hhsuite
-  - alignment
 tools:
   - "hhsuite":
       description: "HH-suite3 for fast remote homology detection and deep protein annotation"
@@ -20,39 +20,35 @@
         type: map
         description: |
           Groovy Map containing sample information
-          e.g. `[ id:'sample1' ]`
+          e.g. `[ id:'sample1', single_end:false ]`
     - aln:
         type: file
         description: Input MSA file
         pattern: "*.{fa,fasta,fas,a2m,a3m,sto,psi,clu,fa.gz,fasta.gz,fas.gz,a2m.gz,a3m.gz,sto.gz,psi.gz,clu.gz}"
-        ontologies: []
-  - informat:
-      type: string
-      description: Format of the input MSA file
-      enum: ["fas", "a2m", "a3m", "sto", "psi", "clu"]
-  - outformat:
-      type: string
-      description: Format of the output MSA file
-      enum: ["fas", "a2m", "a3m", "sto", "psi", "clu"]
+  - - informat:
+        type: string
+        description: Format of the input MSA file
+        enum: ["fas", "a2m", "a3m", "sto", "psi", "clu"]
+  - - outformat:
+        type: string
+        description: Format of the output MSA file
+        enum: ["fas", "a2m", "a3m", "sto", "psi", "clu"]
 output:
-  msa:
-    - - meta:
+  - msa:
+      - meta:
           type: map
           description: |
             Groovy Map containing sample information
-            e.g. `[ id:'sample1' ]`
-      - ${prefix}.${outformat}.gz:
+            e.g. `[ id:'sample1', single_end:false ]`
+      - "${prefix}.${outformat}.gz":
           type: file
           description: Gzipped reformatted output MSA file
           pattern: "*.{fas.gz,a2m.gz,a3m.gz,sto.gz,psi.gz,clu.gz}"
-          ontologies: []
-  versions:
-    - versions.yml:
-        type: file
-        description: File containing software versions
-        pattern: "versions.yml"
-        ontologies:
-          - edam: http://edamontology.org/format_3750 # YAML
+  - versions:
+      - "versions.yml":
+          type: file
+          description: File containing software versions
+          pattern: "versions.yml"
 authors:
   - "@vagkaratzas"
 maintainers:

Changes in 'hhsuite/reformat/environment.yml':
--- modules/nf-core/hhsuite/reformat/environment.yml
+++ modules/nf-core/hhsuite/reformat/environment.yml
@@ -4,4 +4,4 @@
   - conda-forge
   - bioconda
 dependencies:
-  - bioconda::hhsuite=3.3.0
+  - "bioconda::hhsuite=3.3.0"

Changes in 'hhsuite/reformat/main.nf':
--- modules/nf-core/hhsuite/reformat/main.nf
+++ modules/nf-core/hhsuite/reformat/main.nf
@@ -13,8 +13,8 @@
     val(outformat)
 
     output:
-    tuple val(meta), path("${prefix}.${outformat}.gz"), emit: msa
-    path "versions.yml"                               , emit: versions
+    tuple val(meta), path("${prefix}"), emit: msa
+    path "versions.yml"               , emit: versions
 
     when:
     task.ext.when == null || task.ext.when
@@ -22,11 +22,14 @@
     script:
     def args = task.ext.args ?: ''
     prefix = task.ext.prefix ?: "${meta.id}"
-    def is_compressed = aln.getExtension() == "gz" ? true : false
-    def aln_name = is_compressed ? aln.getBaseName() : aln
+    def is_compressed = aln.name.endsWith(".gz")
+    def aln_name = aln.name
+    if (is_compressed) {
+        aln_name = aln.name.replace(".gz", "")
+    }
     """
-    if [ "${is_compressed}" == "true" ]; then
-        gzip -c -d ${aln} > ${aln_name}
+    if [ "$is_compressed" == "true" ]; then
+        gzip -c -d $aln > $aln_name
     fi
 
     reformat.pl \\
@@ -34,9 +37,7 @@
         ${informat} \\
         ${outformat} \\
         ${aln_name} \\
-        ${prefix}.${outformat}
-
-    gzip ${prefix}.${outformat}
+        ${prefix}
 
     cat <<-END_VERSIONS > versions.yml
     "${task.process}":

Changes in 'hhsuite/reformat/tests/main.nf.test.snap':
--- modules/nf-core/hhsuite/reformat/tests/main.nf.test.snap
+++ modules/nf-core/hhsuite/reformat/tests/main.nf.test.snap
@@ -24,18 +24,13 @@
                 "versions": [
                     "versions.yml:md5,735556ad44acf50c07f048a6755629d3"
                 ]
-            },
-            {
-                "HHSUITE_REFORMAT": {
-                    "hhsuite": "3.3.0"
-                }
             }
         ],
         "meta": {
             "nf-test": "0.9.2",
-            "nextflow": "25.04.4"
+            "nextflow": "24.10.2"
         },
-        "timestamp": "2025-06-25T09:21:03.830017069"
+        "timestamp": "2025-02-12T18:04:29.856188896"
     },
     "multiplesequencealign - setoxin - fas - sto": {
         "content": [
@@ -66,9 +61,9 @@
         ],
         "meta": {
             "nf-test": "0.9.2",
-            "nextflow": "25.04.4"
+            "nextflow": "24.10.2"
         },
-        "timestamp": "2025-06-25T09:20:47.475112495"
+        "timestamp": "2025-02-12T18:04:11.915274366"
     },
     "multiplesequencealign - setoxin - sto - a3m": {
         "content": [
@@ -99,8 +94,8 @@
         ],
         "meta": {
             "nf-test": "0.9.2",
-            "nextflow": "25.04.4"
+            "nextflow": "24.10.2"
         },
-        "timestamp": "2025-06-25T09:20:55.49495356"
+        "timestamp": "2025-02-12T18:04:20.926572029"
     }
 }
Changes in 'hhsuite/reformat/tests/main.nf.test':
--- modules/nf-core/hhsuite/reformat/tests/main.nf.test
+++ modules/nf-core/hhsuite/reformat/tests/main.nf.test
@@ -15,7 +15,7 @@
             process {
                 """
                 input[0] = [
-                    [ id:'test' ],
+                    [ id:'test' ], // meta map
                     file(params.modules_testdata_base_path + '../../multiplesequencealign/testdata/setoxin.ref', checkIfExists: true)
                 ]
                 input[1] = "fas"
@@ -41,7 +41,7 @@
                 process {
                 """
                 input[0] = [
-                    [ id:'test' ],
+                    [ id:'test' ], // meta map
                     file(params.modules_testdata_base_path + '../../multiplesequencealign/testdata/setoxin.ref', checkIfExists: true)
                 ]
                 input[1] = "fas"
@@ -78,7 +78,7 @@
             process {
                 """
                 input[0] = [
-                    [ id:'test' ],
+                    [ id:'test' ], // meta map
                     file(params.modules_testdata_base_path + '../../multiplesequencealign/testdata/setoxin.ref', checkIfExists: true)
                 ]
                 input[1] = "fas"
@@ -90,10 +90,7 @@
         then {
             assertAll(
                 { assert process.success },
-                { assert snapshot(
-                    process.out,
-                    path(process.out.versions[0]).yaml
-                ).match() }
+                { assert snapshot(process.out).match() }
             )
         }
 

************************************************************
